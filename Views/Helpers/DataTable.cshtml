@using Stockboy.Classes;
@using System.Reflection
@using System.ComponentModel.DataAnnotations;

@using static Stockboy.Classes.Globals

@model Stockboy.Helpers.DataTableTagHelper

@{
	List<PropertyInfo> display_fields = Model.data.list.DisplayFields ().Where (field => field.Name != Model.id_field).ToList ();
	int column_count = display_fields.Count ();
}

<style>

	.scroller { max-height: 25em; overflow: auto; }

</style>

<div id="@Model.id" class="data-table scroller" endpoint="@Model.endpoint" style="grid-template-columns: repeat(@column_count, min-content)" onmouseout="remove_highlight ('@Model.id')">
	<div class="header">
		@{
			foreach (PropertyInfo field in display_fields) {
				<div field="@field.Name">
					<div>@(field.Name.ToHeader ())</div>
					@{
						if ((Model.data?.data_fields?.sort_fields is not null) && (Model.data.data_fields.sort_fields.Contains (field.Name))) {
							<div class="glyph"></div>
						}
					}
				</div>
			}
		}
	</div>

	@{
		if (Model.data.list.Count () > 0) {
			foreach (var row in Model.data.list) {
				<div class="table-row" style="display: contents" onmouseover="highlight_row (this)" onclick="toggle_row_selection (this)">
					@{
						if (Model.id_field is not null) {
							<input type="hidden" name="@Model.id_field" value="@(row.KeyField ().GetValue (row))" />
						}
					}

					@{
						foreach (PropertyInfo field in display_fields) {
							<div style="cursor: pointer; @(field.IsNumeric () ? "text-align: right": String.Empty)">@(field.GetValue (row))</div>
						}
					}
				</div>
			}
		} else {
			<div class="table-row centered" style="grid-column: span @(display_fields.Count ())">No entries</div>
		}
	}
</div>
