@using Stockboy.Models
@using System.Diagnostics;

@using static Stockboy.Classes.Globals;

@model Stockboy.Models.PurchaseFormModel

@{
	String? purchase_date = Model.purchase?.purchase_date.ToString ("s", System.Globalization.CultureInfo.InvariantCulture);
	String? settlement_date = Model.purchase?.settlement_date.ToString ("yyyy-MM-dd");
}

<form id="purchases_form">
	<div class="form-table">

		@{
			if (Model.purchase?.id is not null) {
				<input type="hidden" id="id" name="id" value="@Model.purchase?.id" />
			}
		}

		<label for="broker_id">Broker</label>
		<select id="broker_id" name="broker_id" required>
			<option disabled selected value="">Select One</option>
			@{
				if (Model?.brokers is not null) foreach (BrokersTable broker in Model.brokers) {
					String selected = (broker.id == Model?.purchase?.broker_id) ? "selected" : String.Empty;
					<option value="@broker.id" @selected>@broker.name</option>
				}
			}
		</select>

		<label for="ticker_id">Ticker</label>
		<select id="ticker_id" name="ticker_id" required>
			<option disabled selected value="">Select One</option>
			@{
				if (Model?.tickers is not null) foreach (TickersTable ticker in Model.tickers) {
					String selected = (ticker.id == Model?.purchase?.ticker_id) ? "selected" : String.Empty;
					<option value="@ticker.id" @selected>@ticker.name</option>
				}
			}
		</select>

		<label for="quantity">Quantity</label>
		<input type="numeric" id="quantity" name="quantity" commas="true" decimal-places="8" required value="@Model?.purchase?.quantity"/>

		<label for="purchase_price">Price</label>
		<input type="currency" id="purchase_price" name="purchase_price" commas="true" decimal-places="10" required value="@Model?.purchase?.purchase_price" />

		<label for="purchase_date">Purchase Date</label>
		<input type="date" id="purchase_date" name="purchase_date" value="@purchase_date" />

		<label for="settlement_date">Settlement Date</label>
		<input type="datetime-local" id="settlement_date" name="settlement_date" value="@settlement_date" />

		<label for="purchase_type_id">Purchase Type</label>
		<select id="purchase_type_id" name="purchase_type_id">
			@{
				if (Model?.purchase_types is not null) foreach (OptionsData option in Model.purchase_types) {
					String selected = (option.id == Model.purchase?.purchase_type_id) ? "selected" : String.Empty;
					<option value="@option.id">@option.description</option>
				}
			}
		</select>
	</div>

</form>

<div class="button-bar">
	<button id="cancel_button" onclick="close_popup ('popup_window')">Cancel</button>
	<button id="submit_button" onclick="submit_form (document.getElementById ('purchases_form'), 'SavePurchase', update_holdings)">Save</button>
</div>
